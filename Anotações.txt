Funções e instâncias:

    function Pessoa() {
        this.nome = 'Guilherme'
        this.idade = 28
    }

    var pessoa = new Pessoa()
    console.log(pessoa.nome)
    console.log(pessoa.idade)

Classes:

    class Animal {
        constructor(nome) { //Não precisa do function
            this.nome = nome
        }

        printNome() { //Não precisa do function
            return this.nome
        }
    }

    class Cachorro extends Animal {
        constructor(nome) {
            super(nome) //Para atribuir ao construtor da classe Animal
        }
    }

    cachorro = new Cachorro('Bob')
    console.log(cachorro.nome)

Trabalhando com datas:

    var date = new Date() //Já é nativo do js - sem parâmetro, retorna a data e o horário atual

    console.log(date.getDate())//O dia do mês. Ex: 25
    console.log(date.getDay())//O dia da semana (Domingo é zero)
    console.log(date.getFullYear())//Ano
    console.log(date.getHours())//Ex: 15
    console.log(date.getMinutes())//Ex: 58

    var date2 = new Date('05/20/2023')// Datas personalizadas MM-DD-AAAA

Calculando diferenças de datas: (to-do)

    console.log(date2.getTime())//Em milisegundos


    var diference = (date2.getTime() - date.getTime()) / (1000 * 360 * 24)//Transformando ms em dias
    console.log(diference)

Manipulando conteúdo:

Pela tag:

    var p = document.getElementsByTagName('p')//Cria um array com todas as ocorrências do parágrafo

    console.log(p[0].innerHTML)//Pega todos os paragrafos existendes e seleciona o primeiro[0] e retorna o conteudo

    p[0].innerHTML = 'Novo conteúdo'//Muda o que está escrito

    for (var i = 0; i < p.length; i++){ //Manipulando com laço de repetição
        p[i].innerHTML =  'Valor:' + i 
    }

Manipulando css pelo id:

    var el = document.getElementById('box')
    el.style.backgroundColor = 'red'
    el.style.marginLeft = '200'

Manipulando css pela classe:

    var elementos = document.getElementsByClassName('box')

    for(var i = 0; i < elementos.length; i++) {
        var el = elementos[i]//Primeira ocorrência

        el.style.backgroundColor = 'green'
        el.style.width = '100px'
        el.style.height = '100px'
        el.style.margin = '10px'
    }

query selector all:

    var els = document.querySelectorAll('.testes ')//como se tivesse referenciando no css
    els[0].innerHTML = '<div class="inside-testes-via-js">TEXTO VIA JS</div>'

Para pegar todos as divs e todos os p:

    document.querySelectorAll('div, p')//Pode colocar classe, id ...

Para pegar todos as divs que possuem um atributo. ex: class:

    document.querySelectorAll('div[class]')

Para pegar todos elementos p que estão dentro de um elemento div - Retorna somente as divs que contem um elemento p:

    document.querySelectorAll('div > p')//Divs que contem o elemento p

Animações com js puro

    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>

        <style>
            .box {
                width: 200px;
                height: 200px;
                background-color: red;
                margin-left: 0;
            }
            .animEsquerda {
                transition: 1s;
                margin-left: 90px;
                margin-top: 20px;
                background-color: green;
            }
        </style>
    </head>
    <body>
        <div class="box"></div>
        <script>
            var box = document.querySelectorAll('.box')[0]
            /* Para executar automaticamente
            setTimeout(()=>{
                box.classList.add('animEsquerda')
            }, 1000)
            */
            //Animando com o click
            box.addEventListener('click', ()=>{
                box.classList.add('animEsquerda')
            })
        </script>
    </body>
    </html>

Animação ver mais:

    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
        <style>
            .conteudo h2 span {
                font-size: 13px;
                cursor: pointer;
            }
            .conteudo p {
                overflow: hidden;
                height: 10px;
                transition: 1s;
            }
            .mostrar {
                height: 200px !important;
            }
        </style>
    </head>
    <body>
        <div class="conteudo">
            <h2>Título do conteudo <span>Ver Mais</span></h2>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur enim natus ipsa delectus, necessitatibus vel nisi modi molestiae est. Rerum, sint aspernatur accusamus suscipit officiis eius reiciendis dolor atque explicabo.! Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aut hic sit obcaecati nam corrupti, ipsum vero quibusdam quam officia ipsa, nisi perferendis maiores pariatur nobis! Neque, earum. Nisi, rem vitae?</p>
        </div>
        <script>
            var span = document.querySelector('.conteudo span')
            span.addEventListener('click', ()=>{
                var conteudo = document.querySelector('.conteudo p')

                if(conteudo.classList.contains('mostrar')) {
                    span.innerHTML = 'Ver mais'
                    conteudo.classList.remove('mostrar')
                } else {
                    span.innerHTML = 'Ocutar'
                    conteudo.classList.add('mostrar')
                }

            })
        </script>
    </body>
    </html>

Mostrar mais com novas ocorrências:

    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
        <style>
            .conteudo h2 span {
                font-size: 13px;
                cursor: pointer;
            }
            .conteudo p {
                overflow: hidden;
                height: 10px;
                transition: 1s;
            }
            .mostrar {
                height: 200px !important;
            }
        </style>
    </head>
    <body>
        <div class="conteudo">
            <h2>Título do conteudo <span>Ver Mais</span></h2>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur enim natus ipsa delectus, necessitatibus vel nisi modi molestiae est. Rerum, sint aspernatur accusamus suscipit officiis eius reiciendis dolor atque explicabo.! Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aut hic sit obcaecati nam corrupti, ipsum vero quibusdam quam officia ipsa, nisi perferendis maiores pariatur nobis! Neque, earum. Nisi, rem vitae?</p>
        </div>

        <div class="conteudo">
            <h2>Título do conteudo <span>Ver Mais</span></h2>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur enim natus ipsa delectus, necessitatibus vel nisi modi molestiae est. Rerum, sint aspernatur accusamus suscipit officiis eius reiciendis dolor atque explicabo.! Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aut hic sit obcaecati nam corrupti, ipsum vero quibusdam quam officia ipsa, nisi perferendis maiores pariatur nobis! Neque, earum. Nisi, rem vitae?</p>
        </div>

        <div class="conteudo">
            <h2>Título do conteudo <span>Ver Mais</span></h2>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur enim natus ipsa delectus, necessitatibus vel nisi modi molestiae est. Rerum, sint aspernatur accusamus suscipit officiis eius reiciendis dolor atque explicabo.! Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aut hic sit obcaecati nam corrupti, ipsum vero quibusdam quam officia ipsa, nisi perferendis maiores pariatur nobis! Neque, earum. Nisi, rem vitae?</p>
        </div>

        <div class="conteudo">
            <h2>Título do conteudo <span>Ver Mais</span></h2>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur enim natus ipsa delectus, necessitatibus vel nisi modi molestiae est. Rerum, sint aspernatur accusamus suscipit officiis eius reiciendis dolor atque explicabo.! Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aut hic sit obcaecati nam corrupti, ipsum vero quibusdam quam officia ipsa, nisi perferendis maiores pariatur nobis! Neque, earum. Nisi, rem vitae?</p>
        </div>
        <script>
            var spans = document.querySelectorAll('.conteudo span');

            for (var i = 0; i < spans.length; i++) {
                var span = spans[i];
            
                span.addEventListener('click', function() {
                    var conteudo = this.parentNode.nextElementSibling;
            
                    if (conteudo.classList.contains('mostrar')) {
                        this.innerHTML = 'Ver mais';
                        conteudo.classList.remove('mostrar');
                    } else {
                        this.innerHTML = 'Ocultar';
                        conteudo.classList.add('mostrar');
                    }
                });
            }
        </script>
    </body>
    </html>

Slider js puro:

    var lastIndex = 0;

    var images = document.querySelectorAll('.container img')

    images.forEach((item, index) => {
        document.querySelectorAll('.bullet-single')[index]
        .addEventListener('click', ()=>{
            let lastImage = document.querySelectorAll('.container img')[lastIndex]
            let actualImage = document.querySelectorAll('.container img')[index]

            //resetar as bullets e setar a nova com base na imagem
            document.querySelectorAll('.bullet-single')[lastIndex]
            .classList.remove('active-bullet')

            document.querySelectorAll('.bullet-single')[index]
            .classList.add('active-bullet')

            lastImage.style.opacity = '0'
            actualImage.style.opacity = '1'

            lastIndex = index
        })
    })

Arrow functions e Callback:

    const testes = (par)=>{
        console.log(par)
    }

    testes('olá')

    //Callback
    const testes2 = (texto, par)=>{
        par(texto)
    }

    testes2('Olá mundo', (texto)=>{
        console.log(texto)
    })

Callback: Chama depois que uma ação foi feita

    function exibir(num) {
        console.log(`A operação resultou em ${num}`)
    }

    function soma(a, b, callback){
        var op = a+b
        callback(op)
    }

    function multiplicacao(a, b, cb){
        var op = a*b
        cb(op)
    }

    soma(2, 2, exibir)
    multiplicacao(2, 4, exibir)

Exemplo 2 da callback:

    const saudacao = nome => alert('Olá ' + nome)

    const processaEntradaUsuario = (callback) => {
        const nome = prompt('Digite seu nome: ')
        callback(nome)
    }

    processaEntradaUsuario(saudacao)

Exemplo 3 de callback:

    const callback = e => alert('Aconteceu um evento ' + e.type)
    window.addEventListener('click', callback)

Exemplo 4 callback:

    const somar = (x, y) => x + y
    const calcular = (x, y, computar) => computar(x, y)

    const resultado = calcular(20, 30, somar)
    console.log(resultado)

Exemplo 5 - Esclarecedor

    //Vamos criar um botão via js
    function newButton(text, callback) {
        const $body = document.querySelector('body')
        const $button = document.createElement('button')
        $button.textContent = text //O texto do parâmetro

        callback($button) //Posso fazer o que quiser no botão, antes de indexa-lo no body

        $body.insertAdjacentElement('beforeend', $button) //Adicionando antes do fechamento da tag doby

        return $button
    }

    newButton('Login', (button) => {
        button.style.cssText = `
            font-size: 40px;
        `

        button.addEventListener('click', () => {
            console.log('O botão login foi clicado')
        })
    })

    newButton('Signup', (button) => {
        button.style.cssText = `
            font-size: 80px;
            color: red;
        `
    })

Map callback:

    //Função de alta ordem - Cria um novo array com a informação diferente do primeiro
    const arr = [1, 2, 3]
    const newArr = arr.map(elemento => elemento * 2)
    console.log(newArr)

